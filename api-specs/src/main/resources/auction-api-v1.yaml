openapi: 3.0.3

info:
  title: Auctions API Spec
  description: Specs for Auctions API
  version: 1.0.0
  x-icon: auctions

servers:
  - description: local test
    url: http://localhost:8080/api/auctionss/v1
  - description: prod test
    url: https://auctions.bksoftwarevn.com/api/auctionss/v1

tags:
  - name: Auction

paths:

  /api/auctions/v1/search:
    post:
      summary: search auctions
      description: return search actions
      operationId: searchAuctions
      requestBody:
        description: search auction request body
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/auction/search-auction-request.yaml'
      responses:
        "200":
          $ref: 'common.yaml#/components/responses/SearchAuctionResponse'
      tags:
        - auction
  /api/auctions/v1/status:
    put:
      summary: update auctions
      description: return update actions status
      operationId: putUpdateAuctionsStatus
      requestBody:
        description: update auction status request body
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/auction/update-auction-status-request.yaml'
      responses:
        "200":
          $ref: 'common.yaml#/components/responses/CommonResponse'
      tags:
        - auction
  /api/auctions/v1/detail:
    get:
      summary: get detail auction
      description: return detail actions
      operationId: getDetailAuction
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdPathParam'
      responses:
        "200":
          $ref: 'common.yaml#/components/responses/DetailAuctionResponse'
      tags:
        - auction
  /api/auctions/v1/info:
    get:
      summary: get info auction
      description: return info actions
      operationId: getAuctionInfo
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdPathParam'
      responses:
        "200":
          $ref: 'common.yaml#/components/responses/AuctionInfoResponse'
      tags:
        - auction
  /api/auctions/v1/delete:
    delete:
      summary: delete auction
      description: return result delete actions
      operationId: deleteAuction
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdPathParam'
      responses:
        "200":
          $ref: 'common.yaml#/components/responses/CommonResponse'
      tags:
        - auction

  /api/auctions/v1/create:
    description: Create auction
    post:
      summary: Post create auction
      description: request to create auction
      operationId: postCreateAuction
      requestBody:
        description: Create auction request body
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/auction/create-auction-request.yaml'
      responses:
        "200":
          $ref: 'common.yaml#/components/responses/CreateAuctionResponse'
      tags:
        - auction
  /api/auctions/v1/pull:
    get:
      summary: Get list auction
      description: request to get list auction
      operationId: getAuctions
      parameters:
        - name: page
          description: Page
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: size
          description: size
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          $ref: 'common.yaml#/components/responses/AuctionsResponse'
      tags:
        - auction
  /api/auctions/v1/update:
    put:
      summary: Put update auction
      description: request to update auction
      operationId: putUpdateAuction
      requestBody:
        description: Update auction  request body
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/auction/update-auction-request.yaml'
      responses:
        "200":
          $ref: 'common.yaml#/components/responses/CreateAuctionResponse'
      tags:
        - auction
  /api/auctions/v1/management/filter:
    post:
      summary: get list auctions
      description: return list actions
      operationId: filterAuctions
      requestBody:
        description: Create auction request body
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/auction/filter-auction-request.yaml'
      responses:
        "200":
          $ref: 'common.yaml#/components/responses/FilterAuctionResponse'
      tags:
        - auction