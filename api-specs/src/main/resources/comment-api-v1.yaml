openapi: 3.0.3

info:
  title: Comment API Spec
  description: Specs for Comment API
  version: 1.0.0
  x-icon: products

servers:
  - description: local test
    url: http://localhost:8080/api/comment/v1
  - description: prod test
    url: https://auctions.bksoftwarevn.com/api/comment/v1

tags:
  - name: Comment

paths:

  /api/comment/v1/create:
    description: Create comment
    post:
      summary: Post create comment
      description: request to create comment
      operationId: postCreateComment
      requestBody:
        description: Create comment request body
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/comment/create-comment-request.yaml'
      responses:
        "200":
          $ref: 'common.yaml#/components/responses/CreateCommentResponse'
      tags:
        - comment
  /api/comment/v1/update:
    put:
      summary: Put update comment
      description: request to update comment
      operationId: putUpdateComment
      requestBody:
        description: update comment request body
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/comment/update-comment-request.yaml'
      responses:
        "200":
          $ref: 'common.yaml#/components/responses/CreateCommentResponse'
      tags:
        - comment
  /api/comment/v1/list:
    get:
      summary: get list comments
      description: request to get comments
      operationId: getComments
      requestBody:
        description: update comment request body
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/comment/search-comment-request.yaml'
      responses:
        "200":
          $ref: 'common.yaml#/components/responses/CommentsResponse'
      tags:
        - comment
  /api/comment/v1/delete:
    delete:
      summary: delete comment
      description: request to delete comment
      operationId: deleteComment
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdPathParam'
      responses:
        "200":
          $ref: 'common.yaml#/components/responses/CommonResponse'
      tags:
        - comment

  /api/like/v1/create:
    description: Create like
    post:
      summary: Post create like
      description: request to create like
      operationId: postCreateLike
      requestBody:
        description: Create like request body
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/comment/create-like-request.yaml'
      responses:
        "200":
          $ref: 'common.yaml#/components/responses/CreateLikeResponse'
      tags:
        - comment
  /api/like/v1/list:
    get:
      summary: get list auctions liked
      description: request to get auction liked
      operationId: getAuctionsLiked
      requestBody:
        description: get list auctions liked request body
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/comment/search-auction-liked-request.yaml'
      responses:
        "200":
          $ref: 'common.yaml#/components/responses/AuctionsLikedResponse'
      tags:
        - comment

  /api/like/v1/total:
    description: get total like of auction
    get:
      summary: get total liked of auction
      description: request to get total auction liked
      operationId: getTotalLikedAuction
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdPathParam'
      responses:
        "200":
          $ref: 'common.yaml#/components/responses/TotalLikedResponse'
      tags:
        - comment